package com.employees.controllers;

import com.employees.models.Department;
import com.employees.models.Employee;
import com.employees.services.EmployeeService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;

import java.util.Date;

@RestController // This means that this class is a Controller
//@RequestMapping(path = "/") // This means URL's start with /demo (after Application path)
public class EmployeeController {
    @Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private EmployeeService employeeService;


    @PostMapping(path = "/addNewEmployee") // Map ONLY POST Requests
    @ResponseBody //search
    public String addNewEmployee(@RequestBody Employee employee)
    // @RequestParam means it is a parameter from the GET or POST request
    {
        //WHAT ABOUT FKS (manager, managed team, team....) ?????
        employeeService.saveEmployee(employee);
        return "Employee Saved!";
    }
    @PostMapping(path = "/removeEmployee") // Map ONLY POST Requests
    @ResponseBody //search
    public String removeEmployee(@RequestBody Integer employeeId) throws Exception {
        //WHAT ABOUT FKS (manager, managed team, team....) ?????
        employeeService.removeEmployee(employeeId);
        return "Employee Removed!";
    }
//    @GetMapping(path = "/all")
//    public @ResponseBody
//    Iterable<Employee> getAllEmployees() {
//        // This returns a JSON or XML with the users
//        return employeeRepository.findAll();
//    }
//    @GetMapping(path = " /findEmployee")
//    @ResponseBody
//    public E
}